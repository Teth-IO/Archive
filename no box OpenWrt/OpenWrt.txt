##################################
#             OpenWrt            #
##################################

passe outre toutes les limitations des autres routeurs
accès limiter dans le cas de la freebox, certaines tech non supporté comme dans le cas de routerOS (DHCPv6)
open source :)

##################################
#         Info préalable         #
##################################

- MAC de la box : 70:FC:xx:xx:xx:xx
- prefix IPv6 : 2a01:xxx:xxx:xxx::
- ipv6 du broder router : 2a01:e00:29:200a::fffd ou 2a01:e00:29:200a::ffff
- ipv4 full-stack (a demander dans l'espace client)

####################################
#          Configuration           #
####################################

opk update
opk install vim map

vim /etc/config/network

=> on modifie le device auquel est connecté internet
config device
        option device name 'wan'
        option macaddr '70:FC:xx:xx:xx:xx'

=> on configure/crée les interfaces wan4 et wan6
-> wan6 est l'interface qui récupérera la plage ipv6 sur la vlan 836
-> wan4 est le tunnel map-e dans wan6 qui récupérera l'ipv4
config interface 'wan6'
        option device 'wan.836' # Correspond au numéro de l'interface internet suivi du vlan de Free.
        option proto 'dhcpv6' #correspond au protocole. Ici, du dhcpv6 standard.
        option reqprefix 'auto'# On le laisse demander la plage IPv6 obtenu (normalement un /60)
        option reqaddress 'try' # On laisse en try pas besoin de forcer la requete
        list dns '2001:4860:4860::8888' #(optionnel), c’est juste le temps d'avoir un internet fonctionnel le temps de hijacking le dns
        option peerdns '0' # On refuse les dns proposer par Free (il pue un peu la m****e), mais vous pouvez toujours les autoriser si vous le souhaiter.

config interface 'wan4'
        option delegate '0' #On désactive l'intégration de l'IPv6 automatique sur cette interface, car on est en IPv4
        option tunlink 'wan6' # On remet l'interface sur laquel il communique
        option proto 'map' # Le protocole
        option type 'map-e' # Le sous-protocole (on a le choix entre map-e map-t et lw6over4, mais on est sur du map-e pour nous)
        option peeraddr '2a01:e00:29:200a::fffd' # L'adresse du tunnel côté serveur (le border router)
        option ipaddr 'ipv4 full-stack' #L'ip full stack qui vous a été attribué et qui se trouve sur votre espace client
        option ip4prefixlen '32' #Le préfixe de l'IP
        option ip6prefix '2a01:xxx:xxx:xxx::' #Votre plage/préfix IPv6
        option ip6prefixlen '60' #La longueur du préfix
        option mtu '1500' # Le mtu que l'on met à 1500, openwrt adaptera celle de wan6
        option encaplimit 'ignore' #pas d'encapsulation limit
        option maptype 'map-e'

       ####### option pour récupération de l'ip en map  #######

       option ealen '32'
       option psidlen '1'
       option offset '16'
       option psid '65535'

       ########################################################

à partir d'ici internet est déjà opérationnel dans sa partie ipv6 depuis un ordinateur

=> pour faire marcher l'ipv4 full stack

vim /lib/netifd/proto/map.sh
-> ligne 66
          echo "$RULE_DATA" >> /tmp/map-$cfg.rules

        + [ -z "${RULE_DATA##*2a01:e00:29:200a::fffd*}" ] && sed -i "s/RULE_1_IPV6ADDR=.*/RULE_1_IPV6ADDR=${ip6prefix%?}0:ffff:ffff:0/" /tmp/map-$cfg.rules
        + RULE_DATA=`cat "/tmp/map-$cfg.rules"`

          eval $RULE_DATA

-> ligne 130
        - proto_add_ipv4_route "0.0.0.0" 0
        + [ ! -z "${RULE_DATA##*2a01:xxxx:xxxx:xxxx::ffff*}" ] && proto_add_ipv4_route "0.0.0.0" 0


-> à partir d'ici l'ipv4 est fonctionnel mais que depuis l'interface map-wan4 (wan4)

=> routage

vim /etc/config/network

config route
        option interface 'wan4'
        option target '0.0.0.0/0'

-> s'assurer que wan4 fait bien partie de la zone du pare-feu wan (avec wan 6)

=> NAT

étrangement pas de NAT a configurer (tout marche par défaut) tant que les interfaces sont dans les bonnes zones du pare-feu

=> DHCPv4+v6

-> openwrt fait serveur dhcpv4 et v6 par défaut

vim /etc/config/dhcp

-> a la fin du dhcp 'lan'
        option dns 2a01:e0a:ec:4ab0:e65f:01ff:fe8b:8ac9/64
        option dhcp_option '6,192.168.1.200'

=> VPN

A faire
