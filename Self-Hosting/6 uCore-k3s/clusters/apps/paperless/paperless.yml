apiVersion: v1
kind: Secret
metadata:
  namespace: default
  name: paperless-db-secret
type: kubernetes.io/basic-auth
data:
  username: YWRtaW4=
  password: redactd
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pg-paperless
  namespace: default
  labels:
    app: pg-paperless
spec:
  selector:
    matchLabels:
      app: pg-paperless
  template:
    metadata:
      labels:
        app: pg-paperless
    spec:
      containers:
      - name: pg-paperless
        image: docker.io/postgres:latest
        env:
        - name: POSTGRES_DB
          value: "paperless"
        - name: POSTGRES_USER
          value: "admin"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: paperless-db-secret
              key: password
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: pgdata
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: pgdata
        hostPath:
          path: /mnt/raid/nas/pg/paperless
---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: pg-paperless
  labels:
    service: pg-paperless
spec:
  selector:
    app: pg-paperless
  ports:
    - port: 5432
      targetPort: 5432
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: paperless
  namespace: default
  labels:
    app: paperless
spec:
  selector:
    matchLabels:
      app: paperless
  template:
    metadata:
      labels:
        app: paperless
    spec:
      hostAliases:
      - ip: "192.168.1.200"
        hostnames:
          - "keycloak.lan"
      containers:
      - name: paperless
        image: ghcr.io/paperless-ngx/paperless-ngx:2.16.2 # {"$imagepolicy": "flux-system:paperless"}
        env:
        - name: PAPERLESS_REDIS
          value: "redis://redis:6379"
        - name: PAPERLESS_DBHOST
          value: "pg-paperless"
        - name: PAPERLESS_DBUSER
          value: "admin"
        - name: PAPERLESS_PORT
          value: "8000"
        - name: PAPERLESS_URL
          value: "https://paperless.lan"
        - name: REQUESTS_CA_BUNDLE
          value: "/usr/src/paperless/lan.pem"
        - name: PAPERLESS_OCR_USER_ARGS
          value: |
            {"invalidate_digital_signatures": true}
        - name: PAPERLESS_DBPASS
          valueFrom:
            secretKeyRef:
              name: paperless-db-secret
              key: password
        - name: PAPERLESS_SOCIALACCOUNT_PROVIDERS
          value : |
            {"openid_connect": {"APPS": [{"provider_id": "keycloak","name": "Keycloak","client_id": "paperless", "settings": {"server_url": "https://keycloak.lan/realms/lan"}}]}}
        - name: PAPERLESS_APPS
          value: "allauth.socialaccount.providers.openid_connect"
        volumeMounts:
        - name: data
          mountPath: /usr/src/paperless/data
        - name: media
          mountPath: /usr/src/paperless/media
        - name: export
          mountPath: /usr/src/paperless/export
        - name: consume
          mountPath: /usr/src/paperless/consume
        - name: ca-bundle
          mountPath: /usr/src/paperless/lan.pem
          subPath: lan.pem
      volumes:
      - name: data
        hostPath:
          path: /mnt/raid/nas/paperless/data
      - name: media
        hostPath:
          path: /mnt/raid/nas/paperless/media
      - name: export
        hostPath:
          path: /mnt/raid/nas/paperless/export
      - name: consume
        hostPath:
          path: /mnt/raid/nas/paperless/consume
      - name: ca-bundle
        hostPath:
          path: /mnt/raid/nas/ssl
---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: paperless
  labels:
    service: paperless
spec:
  selector:
    app: paperless
  ports:
    - port: 8000
      targetPort: 8000
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  namespace: default
  name: paperless
spec:
  entryPoints:
    - websecure
  routes:
    - kind: Rule
      match: Host(`paperless.lan`)
      services:
        - kind: Service
          name: paperless
          port: 8000
  tls:
    secretName: paperless-secret
